---

- name: 'terraform init'
  shell: '( set -x ; terraform init -no-color ) >terraform.log 2>&1'
  args:
    chdir: '{{ path }}'
  async: '{{ iay_async_timeout }}'
  failed_when: false
  poll: 0
  register: 'iay_async'

- include_role:
    name: 'watch'

- name: 'terraform state list'
  shell: '( set -x ; terraform state list ) 2>&1 | tee -a terraform.log'
  args:
    chdir: '{{ path }}'
  register: 'iay_state'

- include_tasks: 'terraform_import.yml'
  async: '{{ iay_async_timeout }}'
  loop: '{{ iay_imports }}'
  loop_control:
    loop_var: 'iargs'
  poll: 0
  register: 'iay_async'
  vars:
    n: '{{ iargs.type }}.{{ iargs.key }}'
    o: '{{ iargs.type }}_{{ iargs.key }}'
  when: 'n not in iay_state.stdout_lines|default([])'

- include_role:
    name: 'watch'
    tasks_from: 'again'

- set_fact:
    iay_imports: []

- name: 'terraform {{ action }}'
  shell: '( set -x ; terraform plan -no-color ;
            terraform {{ action }} -auto-approve=true -input=false
            -lock={{ lock }} -no-color ) >>terraform.log 2>&1'
  args:
    chdir: '{{ path }}'
  async: '{{ iay_async_timeout }}'
  failed_when: false
  poll: 0
  register: 'iay_async'
  vars:
    lock: '{{ "true" if action == "apply" else "false" }}'

- include_role:
    name: 'watch'
    tasks_from: 'again'
