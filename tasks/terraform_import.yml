---

- include_tasks: 'data_write.yml'
  vars:
    key:   '{{ iargs.key   }}'
    type:  '{{ iargs.type  }}'
    value: '{{ iargs.value|combine({"depends_on":[]}) }}'
  when: '"d" in iay_fields[iargs.type]'

- name: 'Write output.{{ n }}.tf.json file.'
  copy:
    content: '{{ yaml|to_nice_json }}'
    dest: '{{ path }}/output.{{ n }}.tf.json'
  vars:
    yaml:
      output: '{{ { o: { "value" : iargs.id } } }}'

- shell: 'echo +mv {{ file }}.bak {{ file }} >> terraform.log'
  args:
    chdir: '{{ path }}'
    removes: '{{ file }}'
  loop:
    - 'data'
    - 'output'
  vars:
    file: '{{ item }}.{{ n }}.tf.json'

- shell: '( set -x ; terraform refresh -no-color ) 2>&1 | tee -a terraform.log'
  args:
    chdir: '{{ path }}'
  ignore_errors: true
  register: 'refresh'

- shell: '( set -x ; mv {{ file }} {{ file }}.bak ) >> terraform.log 2>&1'
  args:
    chdir: '{{ path }}'
    removes: '{{ file }}'
  loop:
    - 'data'
    - 'output'
  vars:
    file: '{{ item }}.{{ n }}.tf.json'
    
- shell: '( set -x ; sh -c "while terraform state list | grep -q {{ n }} ;
            do terraform state rm {{ n }} ; done" ;
            terraform import -no-color {{ n }} {{ i }} ) >> terraform.log 2>&1'
  args:
    chdir: '{{ path }}'
  failed_when: false
  ignore_errors: true
  register: 'result'
  vars:
    i: '{{ refresh.stdout_lines
          |map("regex_search","^" + o + " = .*")
          |reject("none")
          |map("regex_replace","^" + o + " = ","")
          |list
          |first
          |default("")
          |trim }}'
  when: 'i|length > 0'
